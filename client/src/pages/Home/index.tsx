import { useState, useEffect } from "react";
import { If, Else, Then, When } from "react-if";

import { Loader, Card, FormField } from "../../components";

interface RenderCardsProps {
  data: any[];
  title: string;
}

const RenderCards = ({ data, title }: RenderCardsProps) => {
  if (data?.length > 0)
    return (
      <>
        {data.map((post) => (
          <Card key={post._id} {...post} />
        ))}
      </>
    );

  return (
    <h2 className="mt-5 font-bold text-lightBlue text-xl uppercase">{title}</h2>
  );
};

export default function Home() {
  const [loading, setLoading] = useState(false);
  const [allPosts, setAllPosts] = useState([]);
  const [searchText, setSearchText] = useState("");

  const [searchTimeout, setSearchTimeout] = useState<number | undefined>();
  const [searchedResults, setSearchedResults] = useState([]);

  useEffect(() => {
    const fetchPosts = async () => {
      setLoading(true);
      try {
        const res = await fetch("http://localhost:8080/api/v1/posts", {
          method: "GET",
          headers: {
            "Content-Type": "application/json",
          },
        });

        if (res.ok) {
          const result = await res.json();
          setAllPosts(result.data.reverse());
          console.log(result.data);
        }
      } catch (error) {
        alert(error);
      } finally {
        setLoading(false);
      }
    };

    fetchPosts();
  }, []);

  const handleSearchChange = (e) => {
    clearTimeout(searchTimeout);
    setSearchText(e.target.value);

    setSearchTimeout(
      setTimeout(() => {
        const searchResult = allPosts.filter(
          (item: any) =>
            item.name.toLowerCase().includes(searchText.toLowerCase()) ||
            item.prompt.toLowerCase().includes(searchText.toLowerCase())
        );
        setSearchedResults(searchResult);
      }, 500)
    );
  };

  return (
    <section className="max-w-7xl mx-auto">
      <div>
        <h1 className="font-extrabold text-[32px] text-darkText">
          The Community Showcase
        </h1>
        <p className="mt-2 text-lightText max-w-[500px]">
          Browse through a collection of imaginative and visually stunning
          images generated by DALL-E AI
        </p>
      </div>

      <div className="mt-16">
        <FormField
          labelName="Search"
          name="search"
          type="text"
          placeholder="Search for posts"
          value={searchText}
          handleChange={handleSearchChange}
        />
      </div>

      <div className="mt-10">
        <If condition={loading}>
          <Then>
            <div className="flex justify-center items-center">
              <Loader />
            </div>
          </Then>
          <Else>
            <When condition={searchText}>
              <h2 className="font-medium text-lightText text-xl mb-3">
                Showing results for{" "}
                <span className="text-darkText">{searchText}</span>
              </h2>
            </When>
            <div className="grid lg:grid-cols-4 md:grid-cols-3 xs:grid-cols-2 gap-3">
              <If condition={searchText}>
                <Then>
                  <RenderCards
                    data={searchedResults}
                    title="No search results found"
                  />
                </Then>
                <Else>
                  <RenderCards data={allPosts} title="No posts found" />
                </Else>
              </If>
            </div>
          </Else>
        </If>
      </div>
    </section>
  );
}
